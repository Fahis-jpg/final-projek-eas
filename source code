import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import java.text.SimpleDateFormat;
import java.util.Scanner;
public class coba {
   // Kelas untuk menyimpan informasi transaksi
    static class Transaksi {
        Date tanggal;
        int totalHarga;
        String[] itemDibeli;

        Transaksi(Date tanggal, int totalHarga, String[] itemDibeli) {
            this.tanggal = tanggal;
            this.totalHarga = totalHarga;
            this.itemDibeli = itemDibeli;
        }
    }
    
    // List untuk menyimpan semua Transaksi
    static List<Transaksi> daftarTransaksi = new ArrayList<>();
    
    // Method untuk menu kasir
    static void menuKasir(List<String> namaMenu, List<Integer> hargaMenu, int[] jumlahTerjual, double[] totalPemasukan) {
        Scanner scanner = new Scanner(System.in);
        int[] jumlahItem = new int[namaMenu.size()];
        
        System.out.print("Masukkan PIN Kasir: ");
        String pinKasir = scanner.nextLine();
        if (validasiPINKasir(pinKasir)) {
        } else {
            System.out.println("PIN salah. Akses ditolak.");
            return;
        }
        System.out.println();
        
        while (true) {
            System.out.println("================");
            System.out.println("-- Menu Kasir --");
            System.out.println("================");
            System.out.println("1. Tampilkan Menu");
            System.out.println("2. Transaksi");
            System.out.println("0. Kembali ke menu utama");
            System.out.print("Pilih: ");
            int pilih = scanner.nextInt();
            System.out.println();

            switch (pilih) {
                case 1:
                    tampilkanMenu(namaMenu, hargaMenu);
                    break;
                case 2:
                    tampilkanMenu(namaMenu, hargaMenu);
                    
                    while(true){
                        System.out.print("Masukkan nomor menu yang ingin dibeli (1-"+namaMenu.size()+") atau 0 untuk selesai:");
                        int nomorMenu=scanner.nextInt();
                        if (nomorMenu==0) {
                            break;
                        }else if(nomorMenu>= 1&&nomorMenu<=namaMenu.size()){
                            System.out.print("Masukkan jumlah untuk "+ namaMenu.get(nomorMenu-1)+":");
                            int jumlah=scanner.nextInt();
                            jumlahItem[nomorMenu-1]+=jumlah;
                        }else{
                            System.out.println("Nomor menu tidak valid");
                        }
                    }
                    //menampilkan keranjang pesanan     
                    tampilkanKeranjang(namaMenu, hargaMenu, jumlahItem);
                    
                    //menghitung total harga
                    int totalHarga=hitungTotalHarga(hargaMenu, jumlahItem);
                    
                    //memproses pembayaran
                    pembayaran(totalHarga, jumlahTerjual, hargaMenu, totalPemasukan);
                    
                    //mencatat transaksi
                    String[] itemDibeli = new String[namaMenu.size()];
                    for (int i = 0; i < namaMenu.size(); i++) {
                        if (jumlahItem[i] > 0) {
                            itemDibeli[i] = namaMenu.get(i) +"[" + jumlahItem[i]+"]";
                        }
                    }
                    daftarTransaksi.add(new Transaksi(new Date(), totalHarga, itemDibeli));
                    break;
                case 0:
                    return;
                default:
                    System.out.println("Pilihan tidak valid.");
            }
        }
    }
    
    //method menampilkan menu
    static void tampilkanMenu(List<String> namaMenu, List<Integer> hargaMenu){       
        System.out.println("====================================================");
        System.out.println("                   Daftar Menu                      ");
        System.out.println("====================================================");
        System.out.printf("%-5s %-20s %-10s%n", "No", "Nama Menu", "Harga");
        System.out.println("====================================================");
        for (int i = 0; i < namaMenu.size(); i++) {
            System.out.printf("%-5d %-20s Rp %-10d%n",(i+1),namaMenu.get(i),hargaMenu.get(i));   
        }
        System.out.println("====================================================");
    }
    
    //Method untuk menghitung total harga
    static int hitungTotalHarga(List<Integer> hargaMenu, int[] jumlahItem){
        int totalHarga=0;
        for (int i = 0; i < jumlahItem.length; i++) {
            totalHarga+=hargaMenu.get(i) * jumlahItem[i];
        }
        return totalHarga;
    }
    
    //method untuk menampilkan keranjang
    static void tampilkanKeranjang(List<String> namaMenu, List<Integer> hargaMenu, int[] jumlahItem){
        System.out.println("====================================================");
        System.out.println("                   Daftar Pesanan                   ");
        System.out.println("====================================================");
        System.out.printf("%-5s %-20s %-10s %-10s%n", "No", "Nama Menu", "Qty", "Harga");
        System.out.println("====================================================");
        int nomorUrut=1;
        for (int i = 0; i < namaMenu.size(); i++) {
            if (jumlahItem[i]>0) {
                int totalHargaItem=hargaMenu.get(i) * jumlahItem[i];
                System.out.printf("%-5d %-20s %-10d Rp %-10d%n", nomorUrut++, namaMenu.get(i), jumlahItem[i], totalHargaItem);
            }
        }
        System.out.println("====================================================");
    }
    
    //Method melakukan pembayaran
    static void pembayaran(int totalHarga, int[] jumlahTerjual, List<Integer> hargaMenu, double[] totalPemasukan){
        Scanner scanner = new Scanner(System.in);
        System.out.println("Total harga: Rp" + totalHarga);
        System.out.print("uang       : Rp");
        int uangDibayar = scanner.nextInt();
        
        if (uangDibayar == totalHarga) {
            System.out.println("Uang pas");
        } else if (uangDibayar > totalHarga) {
            int kembalian = uangDibayar - totalHarga;
            System.out.println("Kembalian  : Rp" + kembalian);
            //update jumlah terjual
            for (int i = 0; i < jumlahTerjual.length; i++) {
                if (totalHarga >= hargaMenu.get(i)) {
                    jumlahTerjual[i] += totalHarga / hargaMenu.get(i);
                }
            }
            //update total pemasukan
            totalPemasukan[0] += totalHarga;
        } else {
            System.out.println("Uang yang dibayar tidak cukup");
        }
        System.out.println("====================================================");
        System.out.println("===================Terima Kasih=====================");
        System.out.println();
    }
    
    //Method userAdmin
    static void menuAdmin(List<String> namaMenu, List<Integer> hargaMenu, int[] jumlahTerjual){
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Masukkan PIN Admin: ");
        String pinAdmin = scanner.nextLine();
        if (validasiPINAdmin(pinAdmin)) {
        } else {
            System.out.println("PIN salah. Akses ditolak.");
            return;
        }
        System.out.println();
        
        while (true){
            System.out.println("================");
            System.out.println("-- Menu Admin --");
            System.out.println("================");
            System.out.println("1. Tampilkan Menu");
            System.out.println("2. Tambah Menu");
            System.out.println("3. Ubah Menu");
            System.out.println("4. Hapus Menu");
            System.out.println("0. kembali ke menu utama");
            System.out.print("Pilih:");
            int pilih = scanner.nextInt();
            System.out.println();
            
            switch(pilih){
                case 1:
                    tampilkanMenu(namaMenu, hargaMenu);
                    break;
                case 2:
                    System.out.print("Masukkan nama menu baru: ");
                    scanner.nextLine();
                    String menuBaru = scanner.nextLine();
                    System.out.print("Masukkan harga menu baru: ");
                    int hargaBaru = scanner.nextInt();
                    
                    //tambah menu baru
                    namaMenu.add(menuBaru);
                    hargaMenu.add(hargaBaru);
                    jumlahTerjual = tambahJumlahTerjual(jumlahTerjual);
                    System.out.println("== Menu berhasil ditambahkan ==");
                    break;
                case 3:
                    System.out.print("Masukkan nama menu yang ingin diubah: ");
                    scanner.nextLine();
                    String menuUbah = scanner.nextLine();
                    int indexUbah = cariMenu(namaMenu, menuUbah);
                    if (indexUbah != -1) {
                        System.out.print("Masukkan harga baru untuk " + menuUbah + ": ");
                        int hargaUbah = scanner.nextInt();
                        hargaMenu.set(indexUbah, hargaUbah);
                        System.out.println("== Menu berhasil diubah ==");
                    } else {
                        System.out.println("Menu tidak ditemukan");
                    }
                    break;
                case 4:
                    System.out.println("Masukkan nama menu yang ingin dihapus: ");
                    scanner.nextLine();
                    String menuHapus = scanner.nextLine();
                    int indexHapus = cariMenu(namaMenu, menuHapus);
                    if (indexHapus != -1) {
                        namaMenu.remove(indexHapus);
                        hargaMenu.remove(indexHapus);
                        jumlahTerjual = hapusJumlahTerjual(jumlahTerjual, indexHapus);
                        System.out.println("== Menu berhasil dihapus ==");
                    } else {
                        System.out.println("Menu tidak ditemukan");
                    }
                    break;
                case 0:
                    return;
                default:
                    System.out.println("Pilihan tidak valid");
            }
        }
    }
    
    //Method untuk mencari menu
    static int cariMenu(List<String> namaMenu, String Menu) {
        for (int i = 0; i < namaMenu.size(); i++) {
            if (namaMenu.get(i).equalsIgnoreCase(Menu)) {
                return i;
            }
        }
        return -1;
    }
    
    //Method untuk menambah jumlah terjual
    static int[] tambahJumlahTerjual(int[] jumlahTerjual) {
        int[] newJumlah = new int[jumlahTerjual.length + 1];
        System.arraycopy(jumlahTerjual, 0, newJumlah, 0, jumlahTerjual.length);
        newJumlah[jumlahTerjual.length] = 0;
        return newJumlah;
    }
    
    //Method untuk menghapus jumlah terjual
    static int[] hapusJumlahTerjual(int[] jumlahTerjual, int index) {
        int[] newJumlah = new int[jumlahTerjual.length - 1];
        for (int i = 0, j = 0; i < jumlahTerjual.length; i++) {
            if (i != index) {
                newJumlah[j++] = jumlahTerjual[i];
            }
        }
        return newJumlah;
    }
    
    //Method untuk melihat laporan pemasukan
    static void lihatLaporan(double[] totalPemasukan) {
        System.out.println("Total Pemasukan: Rp " + totalPemasukan[0]);
    }
    
    //Method untuk melihat 5 barang terlaris
    static void lihatBarangTerlaris(List<String> namaMenu, int[] jumlahTerjual) {
        Integer[] indices = new Integer[jumlahTerjual.length];
        for (int i = 0; i < jumlahTerjual.length; i++) {
            indices[i] = i;
        }
        Arrays.sort(indices, Comparator.comparingInt(i -> -jumlahTerjual[i])); // Urutkan berdasarkan jumlah terjual
        System.out.println("==================================");
        System.out.println("        5 Barang Terlaris         ");
        System.out.println("==================================");
        System.out.printf("%-5s %-20s %-10s%n", "No", "Nama Menu", "Terjual");
        System.out.println("==================================");
        for (int i = 0; i < Math.min(5, indices.length); i++) {
            int index = indices[i];
            System.out.printf("%-5d %-20s %-10d%n", (i + 1), namaMenu.get(index), jumlahTerjual[index]);
        }
        System.out.println("==================================");
    }
    
    // Method untuk melihat laporan harian
    static void lihatLaporanHarian() {
        System.out.println("====================================================");
        System.out.println("                  Laporan Harian                    ");
        System.out.println("====================================================");
        System.out.printf("%-20s %-15s %-20s%n", "Tanggal", "Pemasukan", "Item yang Dibeli");
        System.out.println("====================================================");
        
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        
        for (Transaksi transaksi : daftarTransaksi) {
            // Format tanggal
            String formattedDate = dateFormat.format(transaksi.tanggal);
            
            // Menghitung total item yang dibeli
            StringBuilder items = new StringBuilder();
            for (String item : transaksi.itemDibeli) {
                if (item != null) {
                    items.append(item).append("; ");
                }
            }
            
            // Menampilkan informasi transaksi dalam format tabel
            System.out.printf("%-20s %-15d %-20s%n", formattedDate, transaksi.totalHarga, items.toString());
        }
        System.out.println("====================================================");
    }
    
    // Method untuk menu owner
    public static void menuOwner(List<String> namaMenu, List<Integer> hargaMenu, int[] jumlahTerjual, double[] totalPemasukan) {
        Scanner scanner = new Scanner(System.in);
        
        System.out.print("Masukkan PIN Owner: ");
        String pinOwner = scanner.nextLine();
        if (validasiPINOwner(pinOwner)) {
        } else {
            System.out.println("PIN salah. Akses ditolak.");
            return;
        }
        System.out.println();
        
        while (true) {
            System.out.println("================");
            System.out.println("-- Menu Owner --");
            System.out.println("================");
            System.out.println("1. Lihat Laporan Pemasukan");
            System.out.println("2. Lihat 5 Barang Terlaris");
            System.out.println("3. Lihat laporan harian");
            System.out.println("0. Kembali ke Menu Utama");
            System.out.print("Pilih opsi: ");
            int pilihan = scanner.nextInt();
            System.out.println();

            switch (pilihan) {
                case 1:
                    lihatLaporan(totalPemasukan);
                    break;
                case 2:
                    lihatBarangTerlaris(namaMenu, jumlahTerjual);
                    break;
                case 3:
                    lihatLaporanHarian();
                    break;
                case 0:
                    return; // Kembali ke menu utama
                default:
                    System.out.println("Pilihan tidak valid.");
            }
        }
    }
    
    // Method memvalidasi pin kasir
    static boolean validasiPINKasir(String pin) {
        final String PIN_KASIR = "0000";
        return pin.equals(PIN_KASIR);
    }
    
    // Method memvalidasi pin Admin
    static boolean validasiPINAdmin(String pin) {
        final String PIN_ADMIN = "1111";
        return pin.equals(PIN_ADMIN);
    }
    
    // Method memvalidasi pin Owner
    static boolean validasiPINOwner(String pin) {
        final String PIN_OWNER = "2222";
        return pin.equals(PIN_OWNER);
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int pilih = 0;
        
        // Menampilkan tanggal
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        String currentDate = dateFormat.format(new Date());
                       
        // List nama dan harga produk
        List<String> namaMenu = new ArrayList<>(Arrays.asList("Pecel biasa", "Pecel+Telur", "Ayam Goreng", "Ayam Panggang", "Ayam Bumbu Bali", "Es jeruk", "Teh Hangat", "Jeruk Hangat"));
        List<Integer> hargaMenu = new ArrayList<>(Arrays.asList(10000, 11000, 10000, 13000, 12000, 5000, 4000, 4000));
        int jumlahTerjual[] = {0, 0, 0, 0, 0, 0, 0, 0};
        double[] totalPemasukan = {0};
        
        System.out.println("=========================================");
        System.out.println("---- Selamat Datang di Program Kasir ----");
        System.out.println("=========================================");
        System.out.println("Tanggal: " + currentDate);
        System.out.println();
      
        do {
            System.out.println("Pilih mode kasir");
            System.out.println("1. Kasir");
            System.out.println("2. Admin");
            System.out.println("3. Owner");
            System.out.println("4. Exit");
            System.out.print("Pilih:");
            pilih = sc.nextInt();
            
            switch (pilih) {
                case 1:
                    menuKasir(namaMenu, hargaMenu, jumlahTerjual, totalPemasukan);
                    break;
                case 2:
                    menuAdmin(namaMenu, hargaMenu, jumlahTerjual);
                    break;
                case 3:
                    menuOwner(namaMenu, hargaMenu, jumlahTerjual, totalPemasukan);
                    break;
                case 4:
                    System.out.println("======================================");
                    System.out.println("------------ Terima Kasih ------------");
                    System.out.println("======================================");
                    break;
                default:
                    System.out.println("Pilihan anda tidak valid!");                
            }
        } while (pilih != 4);       
    }
}
